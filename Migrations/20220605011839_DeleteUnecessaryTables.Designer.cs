// <auto-generated />
using System;
using Control_Finance_WebAPI.Infra.Data.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Control_Finance_WebAPI.Migrations
{
    [DbContext(typeof(DevGeniusFinanceContext))]
    [Migration("20220605011839_DeleteUnecessaryTables")]
    partial class DeleteUnecessaryTables
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseCollation("Latin1_General_CI_AS")
                .HasAnnotation("ProductVersion", "6.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Control_Finance_WebAPI.Infra.Data.Models.Balance", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime");

                    b.Property<string>("UserCpf")
                        .HasMaxLength(128)
                        .IsUnicode(false)
                        .HasColumnType("varchar(128)")
                        .HasColumnName("User_CPF");

                    b.Property<double>("Value")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("Balance", (string)null);
                });

            modelBuilder.Entity("Control_Finance_WebAPI.Infra.Data.Models.ExpenseCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DtCreated")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.ToTable("ExpenseCategory", (string)null);
                });

            modelBuilder.Entity("Control_Finance_WebAPI.Infra.Data.Models.FormOfPayment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("BalanceId")
                        .HasColumnType("int")
                        .HasColumnName("Balance_Id");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.HasIndex("BalanceId");

                    b.ToTable("FormOfPayment", (string)null);
                });

            modelBuilder.Entity("Control_Finance_WebAPI.Infra.Data.Models.MonthlyExpense", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime");

                    b.Property<int>("CurrentPlot")
                        .HasColumnType("int");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DueDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("ExpenseCategoryId")
                        .HasColumnType("int")
                        .HasColumnName("ExpenseCategory_Id");

                    b.Property<int?>("FormOfPaymentId")
                        .HasColumnType("int")
                        .HasColumnName("FormOfPayment_Id");

                    b.Property<string>("Place")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("QtdPlots")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime");

                    b.Property<string>("UserCpf")
                        .HasMaxLength(128)
                        .IsUnicode(false)
                        .HasColumnType("varchar(128)")
                        .HasColumnName("User_CPF");

                    b.Property<decimal>("Value")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("ExpenseCategoryId");

                    b.HasIndex("FormOfPaymentId");

                    b.ToTable("MonthlyExpense", (string)null);
                });

            modelBuilder.Entity("Control_Finance_WebAPI.Infra.Data.Models.VariableExpense", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("Date")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("FormOfPaymentId")
                        .HasColumnType("int")
                        .HasColumnName("FormOfPayment_Id");

                    b.Property<string>("Place")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(max)")
                        .HasDefaultValueSql("('')");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("datetime");

                    b.Property<string>("UserCpf")
                        .HasMaxLength(128)
                        .IsUnicode(false)
                        .HasColumnType("varchar(128)")
                        .HasColumnName("User_CPF");

                    b.Property<decimal>("Value")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("FormOfPaymentId");

                    b.ToTable("VariableExpense", (string)null);
                });

            modelBuilder.Entity("Control_Finance_WebAPI.Infra.Data.Models.FormOfPayment", b =>
                {
                    b.HasOne("Control_Finance_WebAPI.Infra.Data.Models.Balance", "Balance")
                        .WithMany("FormOfPayments")
                        .HasForeignKey("BalanceId");

                    b.Navigation("Balance");
                });

            modelBuilder.Entity("Control_Finance_WebAPI.Infra.Data.Models.MonthlyExpense", b =>
                {
                    b.HasOne("Control_Finance_WebAPI.Infra.Data.Models.ExpenseCategory", "ExpenseCategory")
                        .WithMany("MonthlyExpenses")
                        .HasForeignKey("ExpenseCategoryId");

                    b.HasOne("Control_Finance_WebAPI.Infra.Data.Models.FormOfPayment", "FormOfPayment")
                        .WithMany("MonthlyExpenses")
                        .HasForeignKey("FormOfPaymentId");

                    b.Navigation("ExpenseCategory");

                    b.Navigation("FormOfPayment");
                });

            modelBuilder.Entity("Control_Finance_WebAPI.Infra.Data.Models.VariableExpense", b =>
                {
                    b.HasOne("Control_Finance_WebAPI.Infra.Data.Models.FormOfPayment", "FormOfPayment")
                        .WithMany("VariableExpenses")
                        .HasForeignKey("FormOfPaymentId");

                    b.Navigation("FormOfPayment");
                });

            modelBuilder.Entity("Control_Finance_WebAPI.Infra.Data.Models.Balance", b =>
                {
                    b.Navigation("FormOfPayments");
                });

            modelBuilder.Entity("Control_Finance_WebAPI.Infra.Data.Models.ExpenseCategory", b =>
                {
                    b.Navigation("MonthlyExpenses");
                });

            modelBuilder.Entity("Control_Finance_WebAPI.Infra.Data.Models.FormOfPayment", b =>
                {
                    b.Navigation("MonthlyExpenses");

                    b.Navigation("VariableExpenses");
                });
#pragma warning restore 612, 618
        }
    }
}
