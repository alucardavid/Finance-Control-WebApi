// <auto-generated />
using System;
using Control_Finance_WebAPI.Infra.Data.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Control_Finance_WebAPI.Migrations
{
    [DbContext(typeof(DevGeniusFinanceContext))]
    [Migration("20220605010734_InitialMIgration")]
    partial class InitialMIgration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseCollation("Latin1_General_CI_AS")
                .HasAnnotation("ProductVersion", "6.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Control_Finance_WebAPI.Infra.Data.Models.Account", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("UserCpf")
                        .HasMaxLength(128)
                        .IsUnicode(false)
                        .HasColumnType("varchar(128)")
                        .HasColumnName("UserCPF");

                    b.HasKey("Id");

                    b.HasIndex("UserCpf");

                    b.ToTable("Account", (string)null);
                });

            modelBuilder.Entity("Control_Finance_WebAPI.Infra.Data.Models.Balance", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime");

                    b.Property<string>("UserCpf")
                        .HasMaxLength(128)
                        .IsUnicode(false)
                        .HasColumnType("varchar(128)")
                        .HasColumnName("User_CPF");

                    b.Property<double>("Value")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("UserCpf");

                    b.ToTable("Balance", (string)null);
                });

            modelBuilder.Entity("Control_Finance_WebAPI.Infra.Data.Models.ExpenseCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DtCreated")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.ToTable("ExpenseCategory", (string)null);
                });

            modelBuilder.Entity("Control_Finance_WebAPI.Infra.Data.Models.FormOfPayment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("BalanceId")
                        .HasColumnType("int")
                        .HasColumnName("Balance_Id");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.HasIndex("BalanceId");

                    b.ToTable("FormOfPayment", (string)null);
                });

            modelBuilder.Entity("Control_Finance_WebAPI.Infra.Data.Models.MigrationHistory", b =>
                {
                    b.Property<string>("MigrationId")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("ContextKey")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<byte[]>("Model")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("ProductVersion")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)");

                    b.HasKey("MigrationId", "ContextKey")
                        .HasName("PK_dbo.__MigrationHistory");

                    b.ToTable("__MigrationHistory", (string)null);
                });

            modelBuilder.Entity("Control_Finance_WebAPI.Infra.Data.Models.MonthlyExpense", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime");

                    b.Property<int>("CurrentPlot")
                        .HasColumnType("int");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DueDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("ExpenseCategoryId")
                        .HasColumnType("int")
                        .HasColumnName("ExpenseCategory_Id");

                    b.Property<int?>("FormOfPaymentId")
                        .HasColumnType("int")
                        .HasColumnName("FormOfPayment_Id");

                    b.Property<string>("Place")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("QtdPlots")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime");

                    b.Property<string>("UserCpf")
                        .HasMaxLength(128)
                        .IsUnicode(false)
                        .HasColumnType("varchar(128)")
                        .HasColumnName("User_CPF");

                    b.Property<decimal>("Value")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("ExpenseCategoryId");

                    b.HasIndex("FormOfPaymentId");

                    b.HasIndex("UserCpf");

                    b.ToTable("MonthlyExpense", (string)null);
                });

            modelBuilder.Entity("Control_Finance_WebAPI.Infra.Data.Models.User", b =>
                {
                    b.Property<string>("Cpf")
                        .HasMaxLength(128)
                        .IsUnicode(false)
                        .HasColumnType("varchar(128)")
                        .HasColumnName("CPF");

                    b.Property<DateTime>("DtCreated")
                        .HasColumnType("datetime");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PassWord")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Cpf");

                    b.ToTable("User", "devgeniusadm");
                });

            modelBuilder.Entity("Control_Finance_WebAPI.Infra.Data.Models.VariableExpense", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("Date")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("FormOfPaymentId")
                        .HasColumnType("int")
                        .HasColumnName("FormOfPayment_Id");

                    b.Property<string>("Place")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(max)")
                        .HasDefaultValueSql("('')");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("datetime");

                    b.Property<string>("UserCpf")
                        .HasMaxLength(128)
                        .IsUnicode(false)
                        .HasColumnType("varchar(128)")
                        .HasColumnName("User_CPF");

                    b.Property<decimal>("Value")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("FormOfPaymentId");

                    b.HasIndex("UserCpf");

                    b.ToTable("VariableExpense", (string)null);
                });

            modelBuilder.Entity("Control_Finance_WebAPI.Infra.Data.Models.WebpagesMembership", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<string>("ConfirmationToken")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime");

                    b.Property<bool?>("IsConfirmed")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<DateTime?>("LastPasswordFailureDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<DateTime?>("PasswordChangedDate")
                        .HasColumnType("datetime");

                    b.Property<int>("PasswordFailuresSinceLastSuccess")
                        .HasColumnType("int");

                    b.Property<string>("PasswordSalt")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("PasswordVerificationToken")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<DateTime?>("PasswordVerificationTokenExpirationDate")
                        .HasColumnType("datetime");

                    b.HasKey("UserId")
                        .HasName("PK__webpages__1788CC4C1E4F1542");

                    b.ToTable("webpages_Membership", (string)null);
                });

            modelBuilder.Entity("Control_Finance_WebAPI.Infra.Data.Models.WebpagesOauthMembership", b =>
                {
                    b.Property<string>("Provider")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("ProviderUserId")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Provider", "ProviderUserId")
                        .HasName("PK__webpages__F53FC0ED813EC02C");

                    b.ToTable("webpages_OAuthMembership", (string)null);
                });

            modelBuilder.Entity("Control_Finance_WebAPI.Infra.Data.Models.WebpagesRole", b =>
                {
                    b.Property<int>("RoleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RoleId"), 1L, 1);

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("RoleId")
                        .HasName("PK__webpages__8AFACE1AA0256449");

                    b.HasIndex(new[] { "RoleName" }, "UQ__webpages__8A2B6160A6ABCDC5")
                        .IsUnique();

                    b.ToTable("webpages_Roles", (string)null);
                });

            modelBuilder.Entity("WebpagesUsersInRole", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("UserId", "RoleId")
                        .HasName("PK__webpages__AF2760AD1B8EF48F");

                    b.HasIndex("RoleId");

                    b.ToTable("webpages_UsersInRoles", (string)null);
                });

            modelBuilder.Entity("Control_Finance_WebAPI.Infra.Data.Models.Account", b =>
                {
                    b.HasOne("Control_Finance_WebAPI.Infra.Data.Models.User", "UserCpfNavigation")
                        .WithMany("Accounts")
                        .HasForeignKey("UserCpf")
                        .HasConstraintName("FK_Account_devgeniusadm.User_UserCPF");

                    b.Navigation("UserCpfNavigation");
                });

            modelBuilder.Entity("Control_Finance_WebAPI.Infra.Data.Models.Balance", b =>
                {
                    b.HasOne("Control_Finance_WebAPI.Infra.Data.Models.User", "UserCpfNavigation")
                        .WithMany("Balances")
                        .HasForeignKey("UserCpf");

                    b.Navigation("UserCpfNavigation");
                });

            modelBuilder.Entity("Control_Finance_WebAPI.Infra.Data.Models.FormOfPayment", b =>
                {
                    b.HasOne("Control_Finance_WebAPI.Infra.Data.Models.Balance", "Balance")
                        .WithMany("FormOfPayments")
                        .HasForeignKey("BalanceId");

                    b.Navigation("Balance");
                });

            modelBuilder.Entity("Control_Finance_WebAPI.Infra.Data.Models.MonthlyExpense", b =>
                {
                    b.HasOne("Control_Finance_WebAPI.Infra.Data.Models.ExpenseCategory", "ExpenseCategory")
                        .WithMany("MonthlyExpenses")
                        .HasForeignKey("ExpenseCategoryId");

                    b.HasOne("Control_Finance_WebAPI.Infra.Data.Models.FormOfPayment", "FormOfPayment")
                        .WithMany("MonthlyExpenses")
                        .HasForeignKey("FormOfPaymentId");

                    b.HasOne("Control_Finance_WebAPI.Infra.Data.Models.User", "UserCpfNavigation")
                        .WithMany("MonthlyExpenses")
                        .HasForeignKey("UserCpf");

                    b.Navigation("ExpenseCategory");

                    b.Navigation("FormOfPayment");

                    b.Navigation("UserCpfNavigation");
                });

            modelBuilder.Entity("Control_Finance_WebAPI.Infra.Data.Models.VariableExpense", b =>
                {
                    b.HasOne("Control_Finance_WebAPI.Infra.Data.Models.FormOfPayment", "FormOfPayment")
                        .WithMany("VariableExpenses")
                        .HasForeignKey("FormOfPaymentId");

                    b.HasOne("Control_Finance_WebAPI.Infra.Data.Models.User", "UserCpfNavigation")
                        .WithMany("VariableExpenses")
                        .HasForeignKey("UserCpf");

                    b.Navigation("FormOfPayment");

                    b.Navigation("UserCpfNavigation");
                });

            modelBuilder.Entity("WebpagesUsersInRole", b =>
                {
                    b.HasOne("Control_Finance_WebAPI.Infra.Data.Models.WebpagesRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .IsRequired()
                        .HasConstraintName("fk_RoleId");

                    b.HasOne("Control_Finance_WebAPI.Infra.Data.Models.Account", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .IsRequired()
                        .HasConstraintName("fk_UserId");
                });

            modelBuilder.Entity("Control_Finance_WebAPI.Infra.Data.Models.Balance", b =>
                {
                    b.Navigation("FormOfPayments");
                });

            modelBuilder.Entity("Control_Finance_WebAPI.Infra.Data.Models.ExpenseCategory", b =>
                {
                    b.Navigation("MonthlyExpenses");
                });

            modelBuilder.Entity("Control_Finance_WebAPI.Infra.Data.Models.FormOfPayment", b =>
                {
                    b.Navigation("MonthlyExpenses");

                    b.Navigation("VariableExpenses");
                });

            modelBuilder.Entity("Control_Finance_WebAPI.Infra.Data.Models.User", b =>
                {
                    b.Navigation("Accounts");

                    b.Navigation("Balances");

                    b.Navigation("MonthlyExpenses");

                    b.Navigation("VariableExpenses");
                });
#pragma warning restore 612, 618
        }
    }
}
